@inputs EGP_SCREEN:wirelink EGP_USER:entity

if(first() || dupefinished()) {
    function wirelink egpScreen() {
        return EGP_SCREEN
    }
    
    function void egpWire() {
        findIncludePlayerProps(owner())
        findByClass("gmod_wire_egp*")
        findSortByDistance(entity():pos())
        
        if(find()) {   
            if(find():owner() == owner()) {
                if(!egpScreen():entity()) {
                    #ifdef entity:createWire(entity, string, string)
                    
                    local EGP = find()
                    entity():createWire(EGP, "EGP_SCREEN", "wirelink")
                    entity():createWire(EGP, "EGP_USER", "User")
                    
                    #endif
                }
            }
        }
    }
    
    function number egpScreenChanged() {
        return EGP_SCREEN & ~EGP_SCREEN || ((first() || dupefinished()) && egpScreen():entity():isValid())
    }
    
    function number egpUserChanged() {
        return EGP_USER & ~EGP_USER
    }
    
    function entity egpUser() {
        return EGP_USER
    }
    
    function vector2 entity:egpToScreen(Dir:vector, Fov:number) {
        local CamAngle = (This:aimPos() - This:shootPos()):toAngle()
        local FDP = CamAngle:forward():dot(Dir)
        
        if(FDP <= 0) {
            return vec2(-1, -1)
        }
        
        local VProj = 4 * egpScrH(This) / (6 * tan(0.5 * Fov)) / FDP * Dir
        
        return vec2(
            0.5 * egpScrW(This) + CamAngle:right():dot(VProj), 
            0.5 * egpScrH(This) - CamAngle:up():dot(VProj)
        )
    }
    
    function vector2 entity:egpWorldToScreen(WorldPos:vector, Fov:number) {
        local Dir = WorldPos - This:shootPos()
        local CamAngle = (This:aimPos() - This:shootPos()):toAngle()
        local FDP = CamAngle:forward():dot(Dir)
        
        if(FDP <= 0) {
            return vec2(-1, -1)
        }
        
        local VProj = 4 * egpScrH(This) / (6 * tan(0.5 * Fov)) / FDP * Dir
        
        return vec2(
            0.5 * egpScrW(This) + CamAngle:right():dot(VProj), 
            0.5 * egpScrH(This) - CamAngle:up():dot(VProj)
        )
    }
    
    function void wirelink:egpFixMaterials() {
        foreach(_:number, Id:number = This:egpObjectIndexes()) {
            local Material = This:egpMaterial(Id)
            if(Material != "") {
                This:egpMaterial(Id, "")
                This:egpMaterial(Id, Material)
            }
        }
    }
}
