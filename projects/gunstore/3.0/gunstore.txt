@name Advanced Gunstore
@inputs [USER01, USER02, USER03, USER04, USER05, USER06, USER07, USER08, USER09, USER10, USER11, USER12, USER13, USER14, USER15, USER16, USER17, USER18, USER19, USER20]:wirelink
@persist CATEGORIES:table ITEMS:table SHIPMENTS:table TAB:string CART:table TAX:number LKCART:table CLIENT:entity

#include "library/egp/3.0/init"
#include "library/ulx"
#include "library/user-ranger"
#include "projects/gunstore/items"

if(first() || dupefinished()) {
    CATEGORIES = sStoreCategories()
    ITEMS = sStoreItems()
    CART = table()
    SHIPMENTS = table()
    TAB = ""
    CLIENT = noentity()
    TAX = 0
    
    function string table:sItemName() {
        return This["name", string]
    }
    
    function number table:sItemPrice() {
        local Price = roundNearest(This["price", number], 500)
        if(Price > 10000) {
            Price = roundNearest(Price, 1000)
        }
        return Price
    }
    
    function number table:sItemAvailable() {
        return SHIPMENTS:exists(This["name", string]:lower())
    }
    
    function table sCartItem(Name:string) {
        if(LKCART:exists(Name)) {
            return LKCART[Name, table] 
        }
        
        return notable()
    }
    
    function number table:sItemMaxInCart() {
        local Name = This:sItemName()
        
        local CartItem = sCartItem(Name)
        if(CartItem != notable()) {
            return CartItem["amount", number] >= (This["max", number] > 0 ? This["max", number] : 10)
        }
        
        return 0
    }
    
    function table sCartDetails() {
        local Amount = 0
        local Total = 0
        foreach(_:number, CartItem:table = CART) {
            Amount = Amount + CartItem["amount", number]
            Total = Total + CartItem["amount", number] * CartItem["item", table]:sItemPrice()
        }
        
        return table("amount" = Amount, "total" = Total)
    }
    
    function table table:dCartItem(CartItem:table, K:number, List:table) {
        local Item = CartItem["item", table]
        local Amount = CartItem["amount", number]
        local Name = Item:sItemName()
        local Price = Item:sItemPrice()
        
        if(This == notable()) {
            return table(
                "type" = "box",
                "data" = CartItem,
                "colour" = vec4(50,50,50,255),
                "position" = table(
                    "x" = "2%",
                    "y" = ((K - 1) * 32 + (K * 8)) + 5
                ),
                "size" = table(
                    "width" = "96%",
                    "height" = 32
                ),
                "rounded" = 1,
                "children" = table(
                    table(
                        "name" = "label",
                        "type" = "text",
                        "colour" = vec4(255,255,255,255),
                        "position" = table(
                            "x" = "3%",
                            "y" = 0
                        ),
                        "size" = table(
                            "width" = "47%",
                            "height" = "100%"
                        ),
                        "text" = Name:length() > 14 ? Name:left(14):trim() + "..." : Name,
                        "font" = table(
                            "font" = "",
                            "size" = 17
                        ),
                        "align" = vec2(0, 1)
                    ),
                    table(
                        "name" = "total",
                        "type" = "text",
                        "colour" = vec4(50,200,50,255),
                        "position" = table(
                            "x" = "48%",
                            "y" = 0
                        ),
                        "size" = table(
                            "width" = "22%",
                            "height" = "100%"
                        ),
                        "text" = "$" + (Price * Amount):comma(),
                        "font" = table(
                            "font" = "",
                            "size" = 17
                        ),
                        "align" = vec2(0, 1)
                    ),
                    table(
                        "name" = "amount",
                        "type" = "text",
                        "colour" = vec4(255,255,255,255),
                        "position" = table(
                            "x" = "70%",
                            "y" = 0
                        ),
                        "size" = table(
                            "width" = "10%",
                            "height" = "100%"
                        ),
                        "text" = "x" + Amount:toString(),
                        "font" = table(
                            "font" = "",
                            "size" = 17
                        ),
                        "align" = vec2(0, 1)
                    ),
                    table(
                        "name" = "minus",
                        "colour" = vec4(255,50,50,255),
                        "type" = "box",
                        "position" = table(
                            "x" = "81%",
                            "y" = 4
                        ),
                        "size" = table(
                            "width" = 25,
                            "height" = 25
                        ),
                        "rounded" = 1,
                        "children" = table(
                            table(
                                "type" = "text",
                                "text" = "-",
                                "align" = vec2(1, 1),
                                "colour" = vec4(138, 30, 30, 255)
                            )
                        )
                    ),
                    table(
                        "name" = "remove",
                        "type" = "box",
                        "colour" = vec4(255,50,50,255),
                        "position" = table(
                            "x" = "90%",
                            "y" = 4
                        ),
                        "size" = table(
                            "width" = 25,
                            "height" = 25
                        ),
                        "rounded" = 1,
                        "children" = table(
                            table(
                                "type" = "text",
                                "text" = "x",
                                "align" = vec2(1, 1),
                                "colour" = vec4(138, 30, 30, 255)
                            )
                        )
                    )
                )
            )
        } else {
            This["properties", table]["data", table] = CartItem
            This:dGetChild("label"):dText(Name:length() > 14 ? Name:left(14):trim() + "..." : Name)
            This:dGetChild("total"):dText("$" + (Price * Amount):comma())
            This:dGetChild("amount"):dText("x" + Amount:toString())
        }
        
        return notable()
    }
    
   
    
    function table:dCartItem(CartItem:table) {
        This:dCartItem(CartItem, 0, notable())
    }
    
    function table table:dItem(Item:table, K:number, List:table) {
        local Name = Item:sItemName()
        local Price = Item:sItemPrice()
        local Available = Item:sItemAvailable()
        local MaxInCart = Item:sItemMaxInCart()
        
        if(This == notable()) {
            return table(
                "type" = "box",
                "data" = Item,
                "colour" = vec4(50,50,50,255),
                "position" = table(
                    "x" = "2%",
                    "y" = ((K - 1) * 32 + (K * 8)) + 5
                ),
                "size" = table(
                    "width" = "96%",
                    "height" = 32
                ),
                "rounded" = 1,
                "children" = table(
                    table(
                        "name" = "label",
                        "type" = "text",
                        "colour" = !Available ? vec4(100,100,100,255) : vec4(255,255,255,255),
                        "position" = table(
                            "x" = "3%",
                            "y" = 0
                        ),
                        "size" = table(
                            "width" = "47%",
                            "height" = "100%"
                        ),
                        "text" = Name:length() > 14 ? Name:left(14):trim() + "..." : Name,
                        "font" = table(
                            "font" = "",
                            "size" = 17
                        ),
                        "align" = vec2(0, 1)
                    ),
                    table(
                        "name" = "price",
                        "type" = "text",
                        "colour" = !Available ? vec4(100,100,100,255) : vec4(50,200,50,255),
                        "position" = table(
                            "x" = "48%",
                            "y" = "0"
                        ),
                        "size" = table(
                            "width" = "20%",
                            "height" = "100%"
                        ),
                        "text" = "$" + Price:comma(),
                        "font" = table(
                            "font" = "",
                            "size" = 17
                        ),
                        "align" = vec2(0, 1)
                    ),
                    table(
                        "name" = "add",
                        "type" = "box",
                        "colour" = !Available ? vec4(200,50,50,255) : MaxInCart ? vec4(255,170,0,255) : vec4(50,200,50,255),
                        "position" = table(
                            "x" = "70%",
                            "y" = "4"
                        ),
                        "size" = table(
                            "width" = "88",
                            "height" = "25"
                        ),
                        "rounded" = 1,
                        "children" = table(
                            table(
                                "name" = "label",
                                "type" = "text",
                                "text" = !Available ? "Out of stock" : MaxInCart ? "Max In Cart" : "Add to Cart",
                                "font" = table(
                                    "font" = "",
                                    "size" = 17
                                ),
                                "align" = vec2(1, 1),
                                "colour" = !Available ? vec4(138, 30, 30, 255) : MaxInCart ? vec4(255, 255, 255, 255) : vec4(194, 255, 207, 255)
                            )
                        )
                    )
                )
            )
        } else {
            This["properties", table]["data", table] = Item
            
            local ElementLabel = This:dGetChild("label")
            ElementLabel:dColour(!Available ? vec4(100,100,100,255) : vec4(255,255,255,255))
            ElementLabel:dText(Name:length() > 14 ? Name:left(14):trim() + "..." : Name)
            
            local ElementPrice = This:dGetChild("price")
            ElementPrice:dColour(!Available ? vec4(100,100,100,255) : vec4(50,200,50,255))
            ElementPrice:dText("$" + Price:comma())
            
            local ElementAdd = This:dGetChild("add")
            ElementAdd:dColour(!Available ? vec4(200,50,50,255) : MaxInCart ? vec4(255,170,0,255) : vec4(50,200,50,255))
            
            local ElementAddLabel = ElementAdd:dGetChild("label")
            ElementAddLabel:dColour(!Available ? vec4(138, 30, 30, 255) : MaxInCart ? vec4(255, 255, 255, 255) : vec4(194, 255, 207, 255))
            ElementAddLabel:dText(!Available ? "Out of stock" : MaxInCart ? "Max In Cart" : "Add to Cart")
        }
        
        return notable()
    }
    
    function table:dItem(Item:table) {
        This:dItem(Item, 0, notable())
    }
    
    function dScrollBarResize() {
        local TabCart = TAB == "cart"
        local Items = ITEMS[TAB, table]
        if(TabCart) {
           Items = CART 
        }
        
        local ElementScrollContainer = dGet("body.content.inner.scroll.inner")
        ElementScrollContainer:dSize(
            table("width" = "80%", "height" = TabCart ? "58%" : "94%")
        )
        
        local ElementScrollBar = ElementScrollContainer:dGetChild("bar")
        ElementScrollBar:dPos(vec2(0,0))
        if(Items:count() > (TabCart ? 7 : 11)) {
            ElementScrollBar:dColour(vec4(87,13,248,255))
            
            local Max = TabCart ? 7 : 11
            local Percent = max(min(1, (1 - ((1/Max) * (Items:count() - Max)))) * 100, 15)
            ElementScrollBar:dSize(
                table("width" = "100%", "height" = format("%0.2f%%", Percent))
            )
        } else {
            ElementScrollBar:dColour(vec4(40, 40, 40, 255))
            ElementScrollBar:dSize(
                table("width" = "100%", "height" = "100%")
            )
        }
    }
    
    function sChangeTab(Tab:string) {
        if(TAB == Tab) {
            return
        }
        local PrevTab = TAB
        TAB = Tab
        
        EGP_SCREEN:entity():soundPlay("tab-change", 0.1, "buttons/lightswitch2.wav")
        soundVolume("tab-change", 0.5)
        
        foreach(K:number, ElementChild:table = dGet("body.content.tabs"):dChildren()) {
            local Name = ElementChild:dName()
            local Selected = Name == TAB
            
            local ElementText = ElementChild:dGetChild("label")
            local ElementIcon = ElementChild:dGetChild("icon")
            
            if(Name == "cart") {
                ElementChild:dColour(Selected ? vec4(30,30,30,255) : vec4(217,148,0,255))
                ElementText:dColour(Selected ? vec4(255, 255, 255, 255) : vec4(255, 255, 255, 255))
            } else {
                ElementChild:dColour(Selected ? vec4(30,30,30,255) : (K % 2 == 0 ? vec4(45, 45, 45, 255) : vec4(55, 55, 55, 255)))
                ElementText:dColour(Selected ? vec4(255, 255, 255, 255) : vec4(120, 120, 120, 255))
                ElementIcon:dColour(Selected ? vec4(255, 255, 255, 255) : vec4(120, 120, 120, 255))
            }
        }
        
        local TabCart = TAB == "cart"
        
        local Items = ITEMS[TAB, table]
        if(TabCart) {
           Items = CART 
        }
        
        dScrollBarResize()
        
        local CartDetails = sCartDetails()
        local ElementTabCart = dGet("body.content.tabs.cart.label")
        ElementTabCart:dText("CART (" + CartDetails["amount", number] + ")")
        
        local ElementItems = dGet("body.content.inner.items")
        if(Tab != "cart" && PrevTab == "cart" || Tab == "cart" && PrevTab != "cart") {
            for(I = ElementItems:dChildren():count(), 1, -1) {
                ElementItems:dGetChild(I):dRemove()
            }
            ElementItems["children", table]["index", table]:clear()
        }
        
        if(TabCart) {
            try {
                local SubTotal = CartDetails["total", number]
                local Total = SubTotal * (1 + TAX)
                
                local ElementCheckout = dGet("body.content.inner.checkout")
                ElementCheckout:dGetChild("subtotal"):dText(SubTotal:comma())
                ElementCheckout:dGetChild("total"):dText(Total:comma())
            } catch(_) {
                dGet("body.content.inner"):dAdd(table(
                    "name" = "checkout",
                    "type" = "box",                
                    "position" = table(
                        "x" = 0,
                        "y" = "65%"
                    ),
                    "size" = table(
                        "width" = "100%", "height" = "35%"
                    ),
                    "children" = table(
                        table(
                            "type" = "box",
                            "colour" = vec4(100,100,100,255),
                            "position" = table(
                                "x" = "3%",
                                "y" = 0
                            ),
                            "size" = table(
                                "width" = "94%",
                                "height" = 2
                            )
                        ),
                        table(
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "3%",
                                "y" = "5%"
                            ),
                            "size" = table(
                                "width" = "75",
                                "height" = "25"
                            ),
                            "text" = "Subtotal:"
                        ),
                        table(
                            "name" = "subtotal",
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "25%",
                                "y" = "5%"
                            ),
                            "size" = table(
                                "width" = "150",
                                "height" = "25"
                            ),
                            "text" = "$" + CartDetails["total", number]:comma(),
                            "align" = vec2(2, 0)
                        ),
                        table(
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "3%",
                                "y" = "20%"
                            ),
                            "size" = table(
                                "width" = "75",
                                "height" = "25"
                            ),
                            "text" = "Tax:"
                        ),
                        table(
                            "name" = "tax",
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "25%",
                                "y" = "20%"
                            ),
                            "size" = table(
                                "width" = "150",
                                "height" = "25"
                            ),
                            "text" = floor(TAX * 100) + "%",
                            "align" = vec2(2, 0)
                        ),
                        table(
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "3%",
                                "y" = "35%"
                            ),
                            "size" = table(
                                "width" = "75",
                                "height" = "25"
                            ),
                            "text" = "Total:"
                        ),
                        table(
                            "name" = "total",
                            "type" = "text",
                            "colour" = vec4(255,255,255,255),
                            "position" = table(
                                "x" = "25%",
                                "y" = "35%"
                            ),
                            "size" = table(
                                "width" = "150",
                                "height" = "25"
                            ),
                            "text" = "$" + (CartDetails["total", number] * (1 + TAX)):comma(),
                            "align" = vec2(2, 0)
                        ),
                        table(
                            "name" = "purchase",
                            "type" = "box",
                            "colour" = vec4(50,200,50,255),
                            "position" = table(
                                "x" = "3%",
                                "y" = "55%"
                            ),
                            "size" = table(
                                "width" = "240",
                                "height" = "60"
                            ),
                            "rounded" = 1,
                            "children" = table(
                                table(
                                    "name" = "label",
                                    "type" = "text",
                                    "colour" = vec4(194, 255, 207, 255),
                                    "text" = "Checkout",
                                    "font" = table(
                                        "font" = "",
                                        "size" = 17
                                    ),
                                    "align" = vec2(1, 1)
                                )
                            )
                        ),
                        table(
                            "name" = "clear",
                            "type" = "box",
                            "colour" = vec4(200,50,50,255),
                            "position" = table(
                                "x" = "76%",
                                "y" = "55%"
                            ),
                            "size" = table(
                                "width" = "70",
                                "height" = "60"
                            ),
                            "rounded" = 1,
                            "children" = table(
                                table(
                                    "name" = "label",
                                    "type" = "text",
                                    "colour" = vec4(138, 30, 30, 255),
                                    "text" = "Clear",
                                    "font" = table(
                                        "font" = "",
                                        "size" = 17
                                    ),
                                    "align" = vec2(1, 1)
                                )
                            )
                        )
                    )
                ))
            }
            
            dGet("body.content.inner.items"):dList(Items, "dCartItem", 7, 1)
        } else {
            try { 
                dGet("body.content.inner.checkout"):dRemove()
            } catch(_) {}
            
            dGet("body.content.inner.items"):dList(Items, "dItem", 11, 1)
        }
    }
    
    function void table:sItemAddToCart(Element:table) {
        local Name = This:sItemName()
        local Available = This:sItemAvailable()
        local MaxInCart = This:sItemMaxInCart()
        
        if(Available) {
            local CartItem = sCartItem(Name)
            if(CartItem == notable()) {
                CartItem = table("item" = This, "amount" = 0)
                CART:pushTable(CartItem)
                LKCART[Name, table] = CartItem
            }
            
            if(!MaxInCart) {
                CartItem["amount", number] = CartItem["amount", number] + 1
                
                #update status
                Element:dItem(This)
                
                EGP_SCREEN:entity():soundPlay("tab-change", 0.1, "buttons/lightswitch2.wav")
                
                local CartDetails = sCartDetails()
                local ElementTabCart = dGet("body.content.tabs.cart.label")
                ElementTabCart:dText("CART (" + CartDetails["amount", number] + ")")
            }
        }
    }
    
    function void table:sItemRemoveFromCart(All:number, Element:table) {
        local Item = This["item", table]
        local Name = Item:sItemName()
        local Price = Item:sItemPrice()
        local Amount = This["amount", number]
        
        EGP_SCREEN:entity():soundPlay("item-remove", 0.1, "buttons/lightswitch2.wav")
        soundVolume("item-remove", 0.5)
        
        if(Amount > 1 && !All) {
            Amount -= 1
            This["amount", number] = Amount
            
            local Total = Price * Amount
            
            Element:dGetChild("amount"):dText("x" + Amount)
            Element:dGetChild("total"):dText("$" + Total:comma())
        } else {
            local Items = CART
            for(I = Items:count(), 1, -1) {
                local CartItem = Items[I, table]
                local Item = CartItem["item", table]
                
                if(Item:sItemName() == Name) {
                    Items:remove(I)
                    break
                }
            }
            LKCART:remove(Name)
            
            dGet("body.content.inner.items"):dList(Items, "dCartItem", 7, 1)
            dScrollBarResize()
        }
        
        local CartDetails = sCartDetails()
        local ElementTabCart = dGet("body.content.tabs.cart.label")
        ElementTabCart:dText("CART (" + CartDetails["amount", number] + ")")
        
        local ElementCheckout = dGet("body.content.inner.checkout")
        ElementCheckout:dGetChild("tax"):dText(floor(TAX * 100) + "%")
        ElementCheckout:dGetChild("subtotal"):dText("$" + CartDetails["total", number]:comma())
        ElementCheckout:dGetChild("total"):dText("$" + (CartDetails["total", number] * (1 + TAX)):comma())
    }
    
    function void table:dScroll(Cursor:vector2) {
        local ScrollBar = This:dParent()
        
        local ScrollBarSize = ScrollBar:dSize()
        local ScrollButtonSize = This:dSize()
        
        local Y = clamp((Cursor:y() - ScrollBar:dPos():y()) - ScrollButtonSize:y() * 0.5, 0, ScrollBarSize:y() - ScrollButtonSize:y())
        This:dPos(vec2(0, Y))
        
        local Start = floor(Y / 35.5) + 1
        
        local TabCart = TAB == "cart"
        if(TabCart) {
           dGet("body.content.inner.items"):dList(CART, "dCartItem", 7, Start)
        } else {
            dGet("body.content.inner.items"):dList(ITEMS[TAB, table], "dItem", 11, Start)
        }
    }
    
    function void table:eHandleClickEvent() {
        local Player = This["player", entity]
        local Cursor = This["cursor", vector2]
        
        if(CLIENT != noentity()) {
            return
        }
        
        foreach(_:number, ElementChild:table = dGet("body.content.tabs"):dChildren()) {
            if(ElementChild:dHovering(Cursor)) {
                sChangeTab(ElementChild:dName())
                return
            }
        }
        
        if(TAB == "cart") {
            foreach(_:number, ElementChild:table = dGet("body.content.inner.items"):dChildren()) {
                if(ElementChild:dGetChild("minus"):dHovering(Cursor)) {
                    ElementChild["properties", table]["data", table]:sItemRemoveFromCart(0, ElementChild)
                    return
                }
                
                if(ElementChild:dGetChild("remove"):dHovering(Cursor)) {
                    ElementChild["properties", table]["data", table]:sItemRemoveFromCart(1, ElementChild)
                    return
                }
            }
            
            local ElementPurchase = dGet("body.content.inner.checkout.purchase")
            if(ElementPurchase:dHovering(Cursor)) {
                if(CART:count() > 0) {
                    if(CLIENT == noentity()) {
                        local CartDetails = sCartDetails()
                        local Timeout = 15
                        local Total = CartDetails["total", number] * (1 + TAX)
                        
                        if(Player:money() >= Total) {
                            if(moneyRequest(Player, Total, "Advanced Gunstore", Timeout) == 1) {
                                CLIENT = Player
                                ElementPurchase:dGetChild("label"):dText("Processing...")
                                timer("moneyTimeout", Timeout * 1000)
                            } else {
                                EGP_SCREEN:entity():soundPlay("declined", 0.427, "buttons/weapon_cant_buy.wav")
                            }
                        } else {
                            EGP_SCREEN:entity():soundPlay("declined", 0.427, "buttons/weapon_cant_buy.wav")
                        }
                    }
                }
                return
            }
            
            local ElementTrash = dGet("body.content.inner.checkout.clear")
            if(ElementTrash:dHovering(Cursor)) {
                CART:clear()
                LKCART:clear()
                dGet("body.content.inner.items"):dList(CART, "dCartItem", 7, 1)
                return
            }
        } else {
            foreach(_:number, ElementChild:table = dGet("body.content.inner.items"):dChildren()) {
                if(ElementChild:dGetChild("add"):dHovering(Cursor)) {
                    ElementChild["properties", table]["data", table]:sItemAddToCart(ElementChild)
                    return
                }
            } 
        }
        
        if(ops() < 2500) {
            local ElementScrollBar = dGet("body.content.inner.scroll.inner")
            if(ElementScrollBar:dHovering(Cursor)) {
                ElementScrollBar:dGetChild("bar"):dScroll(Cursor)
                return
            }
        }
    }
}

if(eEventClk("mouse.press")) {
    eEventGetPayload():eHandleClickEvent()
}

if(eEventClk("document.ready")) {
    dBody():dAdd(table(
        "name" = "header",
        "type" = "box",
        "colour" = vec4(87, 13, 248, 255),
        "size" = table(
            "width" = "100%",
            "height" = "10%"
        ),
        "children" = table(
            table(
                "name" = "label",
                "type" = "text",
                "size" = table(
                    "width" = "100%",
                    "height" = "50%"
                ),
                "colour" = vec4(255, 255, 255, 255),
                "text" = "ADVANCED GUNSTORE",
                "font" = table(
                    "font" = "ChatFont",
                    "size" = 18
                ),
                "align" = vec2(1, 2)
            ),
            table(
                "name" = "label",
                "type" = "text",
                "position" = table(
                    "x" = 0,
                    "y" = "50%"
                ),
                "size" = table(
                    "width" = "100%",
                    "height" = "50%"
                ),
                "colour" = vec4(255, 255, 255, 255),
                "text" = "https://github.com/AshleyJamesy/Expression2",
                "font" = table(
                    "font" = "ChatFont",
                    "size" = 12
                ),
                "align" = vec2(1, 1)
            )
        )
    ))
    
    local TabContent = table(
        "name" = "tabs",
        "type" = "box",
        "colour" = vec4(45, 45, 45, 255),
        "size" = table(
            "width" = "33%",
            "height" = "100%"
        ),
        "children" = table()
    )
    
    local TabContentChildren = TabContent["children", table]
    foreach(K:number, Category:table = CATEGORIES) {
        local Name = Category["name", string]
        local Icon = Category["icon", string]
        
        local Cart = Name == "cart"
        
        TabContentChildren:pushTable(
            table(
                "name" = Name:lower(),
                "type" = "box",
                "colour" = Cart ? vec4(217, 148, 0, 255) : (K % 2 == 0 ? vec4(45, 45, 45, 255) : vec4(55, 55, 55, 255)),
                "size" = table(
                    "width" = "100%",
                    "height" = "6.95%"
                ),
                "position" = table(
                    "x" = 0,
                    "y" = format("%0.2f%%", (K - 1) * 6.95)
                ),
                "children" = table(
                    table(
                        "name" = "label",
                        "type" = "text",
                        "colour" = Cart ? vec4(255, 255, 255, 255) : vec4(120, 120, 120, 255),
                        "position" = table(
                            "x" = 0,
                            "y" = 0
                        ),
                        "text" = Cart ? "CART (0)" : (Name:upper() + "  "),
                        "font" = table(
                            "font" = "ChatFont",
                            "size" = 18
                        ),
                        "align" = Cart ? vec2(1, 1) : vec2(2, 1)
                    ),
                    table(
                        "name" = "icon",
                        "type" = "text",
                        "colour" = vec4(120, 120, 120, 255),
                        "size" = table(
                            "width" = 64,
                            "height" = 64
                        ),
                        "position" = table(
                            "x" = "5%",
                            "y" = 5
                        ),
                        "text" = Icon,
                        "font" = table(
                            "font" = "csd",
                            "size" = 42
                        )
                    )
                )
            )
        )
    }
    
    dBody():dAdd(
        table(
            "name" = "content",
            "type" = "box",
            "size" = table(
                "width" = "100%",
                "height" = "90%"
            ),
            "position" = table(
                "x" = "0",
                "y" = "10%"
            ),
            "colour" = vec4(30, 30, 30, 255),
            "children" = table(
                TabContent,
                table(
                    "name" = "inner",
                    "type" = "box",
                    "position" = table(
                        "x" = "33%",
                        "y" = 0
                    ),
                    "size" = table(
                        "width" = "67%",
                        "height" = "100%"
                    ),
                    "colour" = vec4(30, 30, 30, 255),
                    "children" = table(
                        table(
                            "name" = "items",
                            "type" = "box",
                            "size" = table(
                                "width" = "92%",
                                "height" = "100%"
                            )
                        ),
                        table(
                            "name" = "scroll",
                            "type" = "box",
                            "position" = table(
                                "x" = "92%",
                                "y" = 0
                            ),
                            "size" = table(
                                "width" = "8%",
                                "height" = "100%"
                            ),
                            "children" = table(
                                table(
                                    "name" = "inner",
                                    "type" = "box",
                                    "colour" = vec4(20, 20, 20, 255),
                                    "position" = table(
                                        "x" = "2%",
                                        "y" = "3%"
                                    ),
                                    "size" = table(
                                        "width" = "80%",
                                        "height" = "94%"
                                    ),
                                    "rounded" = 1,
                                    "children" = table(
                                        table(
                                            "name" = "bar",
                                            "type" = "box",
                                            "colour" = vec4(40, 40, 40, 255),
                                            "size" = table(
                                                "width" = "100%",
                                                "height" = "100%"
                                            ),
                                            "rounded" = 1
                                        )
                                    )
                                )
                            )
                        )
                    )
                )
            )
        )
    )
    
    dCallback("tabs.done")
}

if(eEventClk("tabs.done")) {
    if(CATEGORIES:count() > 0) {
        sChangeTab(CATEGORIES[1, table]["name", string])
    }
    
    timer("shipments", 1000)
}

if(clk("shipments")) {
    local AvailableShipments = table()
    for(I = 1, 20) {
        local UserWirelink = ioGetInputWirelink("USER" + format("%02d", I))
        local Entity = UserWirelink:userRanger(50)
        
        if(Entity:isValid()) {
            if(Entity:isShipment()) {
                local ShipmentName = Entity:shipmentName():lower()
                
                #add missing shipment
                if(!SHIPMENTS:exists(ShipmentName)) {
                    local Shipment = table(
                        "index" = I,
                        "name" = Entity:shipmentName(),
                        "type" = Entity:shipmentType(),
                        "class" = Entity:shipmentClass(),
                        "amount" = Entity:shipmentAmount(),
                        "total" = Entity:shipmentSize(),
                        "price" = Entity:shipmentPrice()
                    )
                    SHIPMENTS[ShipmentName, table] = Shipment
                    dCallback("shipment.add", Shipment)
                } else {
                    local Shipment = SHIPMENTS[ShipmentName, table]
                    Shipment["index", number] = I
                }
                
                AvailableShipments[ShipmentName, number] = 1
            }
        }
    }
    
    #remove shipments which do not exist
    foreach(ShipmentName:string, Item:table = SHIPMENTS) {
        if(!AvailableShipments:exists(ShipmentName)) {
            SHIPMENTS:remove(ShipmentName)
            dCallback("shipment.remove", Item)
        }
    }
    
    timer("shipments", 1000)
}

if(eEventClk("shipment.add") || eEventClk("shipment.remove")) {
    local Shipment = eEventGetPayload()
    
    if(TAB == "cart") {
        #TODO: remove items in cart
    } else {
        foreach(K:number, ElementItem:table = dGet("body.content.inner.items"):dChildren()) {
            local Item = ElementItem["properties", table]["data", table]
            if(Shipment["name", string]:lower() == Item["name", string]:lower()) {
                ElementItem:dItem(Item)
            }   
        }
    }
}

event chat(Player:entity, LastSaid:string, _:number) {
    if(Player == owner()) {
        local Arguments = LastSaid:replaceRE("%s+", " "):explode(" ")
        
        if(Arguments:removeString(1):lower() == "!gunstore") {
            local Command = Arguments:removeString(1):lower()
            
            if(Player == owner()) {
                hideChat(1)
            }
            
            switch(Command) {
                case "tax",
                    if(CLIENT != noentity()) {
                        print("Gunstore: Tax cannot be changed while Payment/Dispensing!")
                    } else {
                        TAX = Arguments:removeString(1):toNumber()
                        
                        if(TAB == "cart") {
                            local CartDetails = sCartDetails()
                            local SubTotal = CartDetails["total", number]
                            local Total = SubTotal * (1 + TAX)
                            
                            local ElementCheckout = dGet("body.content.inner.checkout")
                            ElementCheckout:dGetChild("tax"):dText(floor(TAX * 100) + "%")
                            ElementCheckout:dGetChild("subtotal"):dText("$" + SubTotal:comma())
                            ElementCheckout:dGetChild("total"):dText("$" + Total:comma())
                        }
                        
                        print("Gunstore: Tax updated to: " + floor(TAX * 100) + "%")
                    }
                break
                default,
                    hideChat(0)
                break
            }
        }
    }
}

if(moneyClk()) {
    local CartDetails = sCartDetails()
    local ElementPurchaseLabel = dGet("body.content.inner.checkout.purchase.label")
    ElementPurchaseLabel:dText("Dispensing (" + CartDetails["amount", number] + ")")
    timer("dispense", 0)
    stoptimer("moneyTimeout")
}

if(clk("dispense")) {
    if(CART:count() > 0) {
        local CartItem = CART[1, table]
        local Amount = CartItem["amount", number]
        
        local Item = CartItem["item", table]
        local ItemName = Item:sItemName()
        local Shipment = SHIPMENTS[ItemName:lower(), table]
        
        if(Amount > 0) {
            local UserWirelink = ioGetInputWirelink("USER" + format("%02d", Shipment["index", number]))
            local Entity = UserWirelink:userRanger(50)
            
            if(Entity:isValid() && Entity:isShipment()) {
                CartItem["amount", number] = Amount - 1
                
                local UserWirelink = ioGetInputWirelink("USER" + format("%02d", SHIPMENTS[ItemName:lower(), table]["index", number]))
                UserWirelink["Fire", number] = 1
                timer("users", 1)
                EGP_SCREEN:entity():soundPlay("dispense", 0.988, "buttons/button4.wav")
                
                if(CartItem["amount", number] == 0) {
                    CART:remove(1)
                    LKCART:remove(ItemName)
                }
            } else {
                local Total = CartItem["amount", number] * Item:sItemPrice() * (1 + TAX)
                moneyGive(CLIENT, Total)
                CLIENT:ulxSendPrivateMessage("Item: '" + ItemName + "' is not available!")
                CLIENT:ulxSendPrivateMessage("You have been refunded: $" + Total:comma() + " for x" + CartItem["amount", number])
                
                CART:remove(1)
                LKCART:remove(ItemName)
                EGP_SCREEN:entity():soundPlay("dispense", 0.616, "buttons/combine_button7.wav")
            }
        }
        
        local CartDetails = sCartDetails()
        local ElementPurchaseLabel = dGet("body.content.inner.checkout.purchase.label")
        ElementPurchaseLabel:dText("Dispensing (" + CartDetails["amount", number] + ")")
        
        dGet("body.content.inner.items"):dList(CART, "dCartItem", 7, 1)
    }
    
    if(CART:count() == 0) {
        CLIENT = noentity()
        
        local ElementPurchaseLabel = dGet("body.content.inner.checkout.purchase.label")
        ElementPurchaseLabel:dText("Checkout")
        
        local ElementCheckout = dGet("body.content.inner.checkout")
        ElementCheckout:dGetChild("subtotal"):dText("$0")
        ElementCheckout:dGetChild("total"):dText("$0")
        
        EGP_SCREEN:entity():soundPlay("dispense-done", 0.692, "common/stuck1.wav")
    } else {
        timer("dispense", 2000)
    }
}

if(clk("users")) {
    for(I = 1, 20) {
        local UserWirelink = ioGetInputWirelink("USER" + format("%02d", I))
        UserWirelink["Fire", number] = 0
    }
}

if(moneyNoClk() || moneyTimeout() || clk("moneyTimeout")) {
    EGP_SCREEN:entity():soundPlay("checkout-declined", 0.427, "buttons/weapon_cant_buy.wav")
    CLIENT = noentity()
    local ElementPurchase = dGet("body.content.inner.checkout.purchase.label")
    ElementPurchase:dText("Checkout")
    stoptimer("moneyTimeout")
}
